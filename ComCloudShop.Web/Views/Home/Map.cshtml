
@{
    Layout = null;
}
@model ComCloudShop.Service.Manger
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>地图</title>
    <script src="~/public/js/jquery.min.js"></script>
    <link href="~/public/css/style2.css" rel="stylesheet" />
    <meta name="viewport" content="width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;" />
    <script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=saMNvgAiaMmcYZhTu2glttrC"></script>
    <style type="text/css">
        body, html, #allmap {
            width: 100%;
            height: 100%;
            overflow: hidden;
            margin: 0;
            font-family: "微软雅黑";
        }
    </style>
</head>
<body>
    <input type="hidden"  id="lon" value="@Model.Lng" />
    <input type="hidden" id="lat" value="@Model.Lat"/>
    <div class="header">
        <div class="h-left-black"></div>
        <div class="h-title"><h1>导航</h1></div>
    </div>
    <div id="allmap"></div> 

    <script type="text/javascript">
    $.ajaxSetup({
        async: true
    });
    var nowlon = 0;
    var nowlat = 0;
    // 百度地图API功能
    var map = new BMap.Map("allmap");
    map.centerAndZoom(new BMap.Point(116.404, 39.915), 11);
    // 单次位置请求执行的函数
    function getLocation() {
        navigator.geolocation.getCurrentPosition(mapIt, locationError);
    }
    function mapIt(position) {

        nowlon = position.coords.longitude;
        nowlat = position.coords.latitude;
       


        var ggPoint = new BMap.Point(nowlon, nowlat);

        var convertor = new BMap.Convertor();
        var pointArr = [];
        pointArr.push(ggPoint);
        convertor.translate(pointArr, 1, 5, translateCallback)

    }
    // 定位失败时，执行的函数
    function locationError(error) {
        switch (error.code) {
            case error.PERMISSION_DENIED:
                alert("User denied the request for Geolocation.");
                break;
            case error.POSITION_UNAVAILABLE:
                alert("Location information is unavailable.");
                break;
            case error.TIMEOUT:
                alert("The request to get user location timed out.");
                break;
            case error.UNKNOWN_ERROR:
                alert("An unknown error occurred.");
                break;
        }
    }
    //坐标转换完之后的回调函数
    translateCallback = function (data) {
        if (data.status === 0) {
            var driving = new BMap.DrivingRoute(map, { renderOptions: { map: map, autoViewport: true} });
            var p2 = new BMap.Point($("#lon").val(), $("#lat").val());
            driving.search(data.points[0], p2);
        }
    }
    getLocation();
    </script>
</body>
</html>
